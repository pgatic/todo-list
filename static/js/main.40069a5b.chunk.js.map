{"version":3,"sources":["components/Alert.js","components/Input.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","msg","type","removeAlert","todos","useEffect","setTimeout","className","Input","todo","handleChange","handleSubmit","isEditing","buttonBg","onSubmit","id","name","value","placeholder","onChange","List","editId","deleteItem","checkItem","editItem","map","checked","onClick","defaultChecked","htmlFor","aria-hidden","getLocalStorage","localStorage","getItem","JSON","parse","App","useState","show","alert","setAlert","setTodos","setTodo","setIsEditing","setEditId","showAlert","setItem","stringify","e","target","preventDefault","item","obj","Date","getTime","toString","length","filtered","filter","itemToEdit","find","upd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40069a5b.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst Alert = ({ msg, type, removeAlert, todos }) => {\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      removeAlert();\n    }, 3000);\n  }, [todos]);\n\n  return <p className={`${type} w-75 center br2 o-70 pv1 white`}>{msg}</p>;\n};\n\nexport default Alert;\n","import React from \"react\";\n\nconst Input = ({ todo, handleChange, handleSubmit, isEditing }) => {\n  let buttonBg = isEditing ? \"gold\" : \"green\";\n  return (\n    <form className=\"pa3 black-80 shadow-4\" onSubmit={handleSubmit}>\n      <input\n        id=\"todo\"\n        name=\"todo\"\n        value={todo}\n        className=\"input-reset ba b--black-20 pa2 mb2 w-80\"\n        type=\"text\"\n        placeholder=\"Enter new todo\"\n        onChange={handleChange}\n      />\n      <input\n        className={`w-20 br2 f5-ns b-ns input-reset pointer bg-${buttonBg} white grow pv2`}\n        type=\"submit\"\n        value={isEditing ? \"EDIT\" : \"ADD\"}\n      />\n    </form>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst List = ({ todos, editId, deleteItem, checkItem, editItem }) => {\n  return (\n    <div className=\"pa3 w-100\">\n      {todos.map(({ id, checked, todo }) => (\n        <div\n          key={id}\n          className={`flex shadow-4 items-center justify-between mb2 ${\n            checked ? \"bg-green o-60\" : \"\"\n          }`}\n        >\n          <input\n            className=\"mh3\"\n            type=\"checkbox\"\n            id={id}\n            onClick={() => checkItem(id)}\n            defaultChecked={checked}\n          />\n          <label htmlFor={id} className=\"w-80 mv2 fw3 tl\">\n            {todo}\n          </label>\n          <div className=\"icon-container w-20 w-10-ns\">\n            <i\n              className=\"fa fa-pencil-square-o fa-lg mt1 mr2 blue pointer\"\n              aria-hidden=\"true\"\n              onClick={() => editItem(id)}\n            ></i>\n            {editId !== id && (\n              <i\n                className=\"fa fa-trash-o fa-lg dark-red mv2 pointer\"\n                aria-hidden=\"true\"\n                onClick={() => deleteItem(id)}\n              ></i>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Input from \"./components/Input\";\nimport List from \"./components/List\";\nimport \"./App.css\";\n\nconst getLocalStorage = () => {\n  let todos = localStorage.getItem(\"todos\");\n  if (todos) {\n    return (todos = JSON.parse(localStorage.getItem(\"todos\")));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\n  const [todos, setTodos] = useState(getLocalStorage);\n  const [todo, setTodo] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editId, setEditId] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!todo) {\n      showAlert(true, \"Can not add empty item!\", \"danger\");\n    } else if (todo && isEditing) {\n      setTodos(\n        todos.map((item) => {\n          if (item.id === editId) {\n            return { ...item, todo };\n          } else {\n            return item;\n          }\n        })\n      );\n      setTodo(\"\");\n      setEditId(null);\n      setIsEditing(false);\n      showAlert(true, \"Item updated!\", \"info\");\n    } else {\n      const obj = { id: new Date().getTime().toString(), checked: false, todo };\n      setTodos([...todos, obj]);\n      showAlert(true, \"New item added!\", \"success\");\n      setTodo(\"\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n\n  const deleteItem = (id) => {\n    const filtered = todos.filter((todo) => todo.id !== id);\n    showAlert(true, \"Item deleted!\", \"danger\");\n    setTodos(filtered);\n  };\n\n  const editItem = (id) => {\n    const itemToEdit = todos.find((todo) => todo.id === id);\n    setIsEditing(true);\n    setEditId(id);\n    setTodo(itemToEdit.todo);\n  };\n\n  const checkItem = (id) => {\n    const upd = todos.map((todo) => {\n      if (todo.id === id) {\n        todo[\"checked\"] = !todo[\"checked\"];\n      }\n      return todo;\n    });\n    setTodos(upd);\n  };\n\n  const showAlert = (show = false, msg = \"\", type = \"\") => {\n    setAlert({ show, msg, type });\n  };\n\n  const clearItems = () => {\n    setTodos([]);\n    showAlert(true, \"List is cleared!\", \"danger\");\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div className=\"App mw7 center\">\n      <h1 className=\"f3 tracked-tight green\">TODO LIST</h1>\n      <div className=\"h2\">\n        {alert.show && (\n          <Alert {...alert} removeAlert={showAlert} todos={todos} />\n        )}\n      </div>\n      <Input\n        todo={todo}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        isEditing={isEditing}\n      />\n      {todos.length > 0 && (\n        <>\n          <List\n            todos={todos}\n            deleteItem={deleteItem}\n            editItem={editItem}\n            checkItem={checkItem}\n            editId={editId}\n          />\n          <div>\n            <button\n              onClick={clearItems}\n              className=\"link bn bg-white black dim f4 fw6 pointer\"\n            >\n              Clear All\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons/css/tachyons.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}